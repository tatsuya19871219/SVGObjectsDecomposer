<!-- Copyright (c) Microsoft Corporation and Contributors. -->
<!-- Licensed under the MIT License. -->

<Window
    x:Class="SVGObjectsDecomposer.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:SVGObjectsDecomposer"
    xmlns:models="using:SVGObjectsDecomposer.Models"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:svg="using:Svg"
    xmlns:converters="using:CommunityToolkit.WinUI.UI.Converters"
    xmlns:brushes="using:CommunityToolkit.WinUI.UI.Media"
    xmlns:custom="using:SVGObjectsDecomposer.Views"
    xmlns:writer="using:SVGObjectsDecomposer.OutputWriters"
    mc:Ignorable="d">


    <Grid>

        <!--<Grid.Resources>
            <local:OutputPurposeToVisibilityConverter x:Key="OutputPurposeToVisibilityConverter"/>
        </Grid.Resources>-->


        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <StackPanel Orientation="Vertical"
                        Grid.Column="0"
                        DataContext="{x:Bind DecomposeEditor}">

                <Grid BorderBrush="Black" BorderThickness="2"
                        AllowDrop="True"
                        DragOver="App_DragOver"
                        Drop="App_Drop"
                        Margin="30"
                        Height="300">

                    <Grid.Background>
                        <brushes:TilesBrush TextureUri="/Assets/TileBase.png"/>
                    </Grid.Background>

                    <TextBlock x:Name="DragDropMessage" 
                            Text="Drop a SVG file here."
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Visibility="{x:Bind AppState.IsInitialized, Mode=OneWay}"/>


                    <custom:SVGImageView Document="{Binding CurrentDocument}" Opacity="0.5"/>

                    <custom:SVGImageView Document="{Binding SelectedSVGObject.SvgDoc}"/>

                    <!--
                    x:Bind default mode is one time
                        https://stackoverflow.com/questions/72034501/binding-not-updating-winui-3
                    -->
                    <!--<ToggleSwitch IsOn="{x:Bind Path=AppState.IsSVGLoaded, Mode=OneWay}"/>-->

                </Grid>

                <ScrollViewer x:Name="CurrentSVGImageInfo" 
                            Margin="90, 10, 30, 10"
                              Height="200">
                    <ScrollViewer.Resources>
                        <Style x:Key="InfoHeaderStyle" TargetType="TextBlock">
                            <Setter Property="FontSize" Value="16"/>
                            <Setter Property="FontWeight" Value="Bold"/>
                        </Style>

                        <Thickness x:Key="InfoBodyMargin">20, 5, 5, 10</Thickness>

                        <Style x:Key="InfoPurposeDetailsStyle" TargetType="TextBlock">
                            <Setter Property="Foreground" Value="Blue"/>
                            <Setter Property="FontStyle" Value="Italic"/>
                            <Setter Property="Margin" Value="{StaticResource InfoBodyMargin}"/>
                        </Style>

                    </ScrollViewer.Resources>
                    <StackPanel Orientation="Vertical">
                        <TextBlock Text="Original SVG file path:"
                                    Style="{StaticResource InfoHeaderStyle}"/>
                        <TextBlock Text="{x:Bind DecomposeEditor.EditingSVGContainer.OriginalFilePath, Mode=OneWay,
                                                FallbackValue='SVG file is not opened yet.'}"
                                                Margin="{StaticResource InfoBodyMargin}"/>
                        

                        <TextBlock Text="Purpose:"
                                   Style="{StaticResource InfoHeaderStyle}"/>
                        <DropDownButton Content="{x:Bind DecomposeEditor.OutputPurposeType, Mode=OneWay}"
                                        Margin="{StaticResource InfoBodyMargin}">
                            <DropDownButton.Flyout>

                                <MenuFlyout Placement="Bottom">

                                    <MenuFlyoutItem Text="Generic" Command="{x:Bind DecomposeEditor.SetOutputPurposeCommand}" 
                                                                    CommandParameter="{x:Bind writer:OutputPurpose.Generic}"/>
                                    <MenuFlyoutItem Text="Animation" Command="{x:Bind DecomposeEditor.SetOutputPurposeCommand}"
                                                                        CommandParameter="{x:Bind writer:OutputPurpose.Animation}"/>
                                    <MenuFlyoutItem Text="Position Tracking" Command="{x:Bind DecomposeEditor.SetOutputPurposeCommand}"
                                                                                CommandParameter="{x:Bind writer:OutputPurpose.PositionTracking}"/>
                                    
                                </MenuFlyout>
                                
                            </DropDownButton.Flyout>
                        </DropDownButton>

                        <TextBlock Text="Export SVG images with a same size of the original SVG image for each object."
                                   Style="{StaticResource InfoPurposeDetailsStyle}"
                                   Visibility="{x:Bind local:BindingHelper.AsVisibleIfSame(DecomposeEditor.OutputPurposeType, writer:OutputPurpose.Generic), Mode=OneWay}"/>

                        <TextBlock Text="Export trimmed SVG images and anchor location of each object as a csv formatted text."
                                   Style="{StaticResource InfoPurposeDetailsStyle}"
                                   Visibility="{x:Bind local:BindingHelper.AsVisibleIfSame(DecomposeEditor.OutputPurposeType, writer:OutputPurpose.Animation), Mode=OneWay}"/>

                        <TextBlock Text="Export the original SVG image and path data of each path object as a resource dictionary (xaml)."                                   
                                   Style="{StaticResource InfoPurposeDetailsStyle}"
                                   Visibility="{x:Bind local:BindingHelper.AsVisibleIfSame(DecomposeEditor.OutputPurposeType, writer:OutputPurpose.PositionTracking), Mode=OneWay}"/>

                        <TextBlock Text="Output directory path:"
                                   Style="{StaticResource InfoHeaderStyle}"/>
                        <TextBlock Text="{x:Bind DecomposeEditor.OutputBaseDirname, Mode=TwoWay}"
                                   Margin="{StaticResource InfoBodyMargin}"/>
                    </StackPanel>
                </ScrollViewer>

                <StackPanel BorderBrush="Black" BorderThickness="1"
                    Orientation="Horizontal"
                    HorizontalAlignment="Center"
                    Margin="30" Spacing="30">

                    <StackPanel.Resources>
                        <Style TargetType="Button">
                            <Setter Property="FontSize" Value="16"/>
                            <Setter Property="Margin" Value="10"/>
                        </Style>
                    </StackPanel.Resources>
                    
                    <Button Content="Open a SVG file" Click="OpenFileButton_Click"/>
                    <Button Content="Save SVG parts" Click="SaveButton_Click"/>
                    <Button Content="Close the SVG file" Click="CloseFileButton_Click"/>
                </StackPanel>

            </StackPanel>

            <Grid Grid.Column="1" DataContext="{x:Bind DecomposeEditor}">
                
                <Grid.Resources>
                    <CollectionViewSource x:Name="GroupedSVGObjects" IsSourceGrouped="True"
                                            Source="{Binding LayeredObjects, Mode=TwoWay}"/>
                </Grid.Resources>
                

                <GridView x:Name="DecomposedImages"
                            BorderThickness="1"
                            BorderBrush="Black"
                            ItemsSource="{Binding Source={StaticResource GroupedSVGObjects}}"
                            Margin="30"
                            SelectionChanged="DecomposedImages_SelectionChanged">

                    <GridView.GroupStyle>
                        <GroupStyle>
                            <GroupStyle.HeaderTemplate>
                                <DataTemplate>

                                    <TextBlock Text="{Binding Key}"/>

                                </DataTemplate>
                            </GroupStyle.HeaderTemplate>

                        </GroupStyle>
                    </GridView.GroupStyle>

                    <GridView.ItemTemplate>
                        
                        <DataTemplate x:DataType="models:EditableSVGObject">
                            <Grid Height="150">

                                <Grid.Background>
                                    <brushes:TilesBrush TextureUri="/Assets/TileBase.png"/>
                                </Grid.Background>

                                <!-- <Image Source="{x:Bind local:ValueConverterHelper.ConvertToBitmapImage(SvgDoc)}"/> -->
                                <custom:SVGImageView Document="{Binding SvgDoc}"/>

                                <TextBlock Text="{Binding ElementName}"/>
                                <!-- <ToggleButton Content="Trim" 
                                                HorizontalAlignment="Right"
                                                VerticalAlignment="Top"/> -->

                            </Grid>
                        </DataTemplate>
                        
                    </GridView.ItemTemplate>
                </GridView>
                
            </Grid>
            
        </Grid>
        
    
    </Grid>
</Window>
